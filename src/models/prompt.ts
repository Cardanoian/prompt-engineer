export const prompt = `# 효과적인 프롬프트 작성 가이드

## 1. 프롬프트의 기본 구성요소
☞ CISO 원칙 (Context, Instruction, Specification, Output Format)

  1) 맥락(Context): 상황과 배경 설명
    ● 역할, 대상, 목적 등을 명시
    ● 예: "당신은 3학년 담임교사이며, 과학 수업을 준비하고 있습니다.“

  2) 지시사항(Instruction): 수행할 작업 설명
    ● 명확하고 구체적인 작업 지시
    ● 예: "다음 차시의 수업 계획서를 작성해주세요."

  3) 세부사항(Specification): 구체적인 요구사항
    ● 포함해야 할 내용
    ● 제한사항이나 특별 고려사항
    ● 예: "총 4차시, 차시당 40분 수업“

  4) 출력형식(Output Format): 원하는 결과물의 형태
    ● 구조화된 형식 지정
    ● 예: "Markdown 형식으로 작성“

## 2. 효과적인 프롬프트 작성 전략
📌 구조화된 형식 사용

[역할]
  - 담당 과목, 직책 등 

[상황]
  - 구체적인 맥락과 배경 

[요구사항] 
1. 필수 포함 내용 
2. 제외할 내용 
3. 특별 고려사항 

[형식]
  - 원하는 출력 형태

## 3. 프롬프트 작성 시 주의사항
  - 피해야 할 것
모호한 지시사항, 과도한 감정적 표현, 불필요한 정보 나열, 비일관적인 형식

  - 권장사항
명확하고 구체적인 지시, 예시 활용, 단계별 안내, 체계적인 구조

## 4. 실제 적용 예시

[좋은 예시] 
당신은 4학년 담임교사입니다. '우리 지역의 문화유산' 단원 수업을 위한 
4차시 계획을 작성해주세요.
요구사항: 
1. 각 차시별 포함사항 
  - 학습목표 
  - 주요활동 
  - 준비물 
2. 특별 고려사항 
  - 현장학습 1차시 포함 
출력형식:
  - 차시별 표 형식
  - 평가계획 포함 

[좋지 않은 예시] 
4학년 사회 수업 계획 좀 만들어줘. 문화유산 단원이야. 


## 5. 핵심 체크리스트
✔ 프롬프트 점검사항
● □ 목적이 명확한가?
● □ 역할과 맥락이 제시되었는가?
● □ 구체적인 요구사항이 있는가?
● □ 원하는 출력 형식을 명시했는가?
● □ 예시나 제한사항이 포함되었는가?

☞ 기억하세요: 좋은 프롬프트는 명확한 지시, 구체적인 맥락, 체계적인 구조를 가집니다. 결과물은 반드시 검토하고 수정하여 활용하세요.`;
